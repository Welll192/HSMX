[{"C:\\Users\\User\\Desktop\\HSMX\\client\\src\\index.js":"1","C:\\Users\\User\\Desktop\\HSMX\\client\\src\\Redux\\Store.js":"2","C:\\Users\\User\\Desktop\\HSMX\\client\\src\\App.js":"3","C:\\Users\\User\\Desktop\\HSMX\\client\\src\\Redux\\Reducer.js":"4","C:\\Users\\User\\Desktop\\HSMX\\client\\src\\Redux\\ActionTypes.js":"5","C:\\Users\\User\\Desktop\\HSMX\\client\\src\\pages\\AuthPage.js":"6","C:\\Users\\User\\Desktop\\HSMX\\client\\src\\pages\\HomePage.js":"7","C:\\Users\\User\\Desktop\\HSMX\\client\\src\\components\\Layout\\Layout.js":"8","C:\\Users\\User\\Desktop\\HSMX\\client\\src\\components\\Profile\\UserProfile.js":"9","C:\\Users\\User\\Desktop\\HSMX\\client\\src\\components\\Layout\\MainNavigation.js":"10","C:\\Users\\User\\Desktop\\HSMX\\client\\src\\components\\StartingPage\\StartingPageContent.js":"11","C:\\Users\\User\\Desktop\\HSMX\\client\\src\\components\\Auth\\AuthForm.js":"12","C:\\Users\\User\\Desktop\\HSMX\\client\\src\\components\\Profile\\ProfileForm.js":"13","C:\\Users\\User\\Desktop\\HSMX\\client\\src\\Redux\\Actions.js":"14"},{"size":433,"mtime":1660614642973,"results":"15","hashOfConfig":"16"},{"size":333,"mtime":1660614642967,"results":"17","hashOfConfig":"16"},{"size":907,"mtime":1660836151677,"results":"18","hashOfConfig":"16"},{"size":541,"mtime":1660836151685,"results":"19","hashOfConfig":"16"},{"size":109,"mtime":1660836151680,"results":"20","hashOfConfig":"16"},{"size":137,"mtime":1660425922765,"results":"21","hashOfConfig":"16"},{"size":178,"mtime":1660425922766,"results":"22","hashOfConfig":"16"},{"size":260,"mtime":1660425922751,"results":"23","hashOfConfig":"16"},{"size":257,"mtime":1660836151697,"results":"24","hashOfConfig":"16"},{"size":965,"mtime":1660863298440,"results":"25","hashOfConfig":"16"},{"size":251,"mtime":1660425922760,"results":"26","hashOfConfig":"16"},{"size":3044,"mtime":1660855515400,"results":"27","hashOfConfig":"16"},{"size":7336,"mtime":1660863298443,"results":"28","hashOfConfig":"16"},{"size":247,"mtime":1660836151682,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13l9hu3",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\HSMX\\client\\src\\index.js",[],"C:\\Users\\User\\Desktop\\HSMX\\client\\src\\Redux\\Store.js",[],"C:\\Users\\User\\Desktop\\HSMX\\client\\src\\App.js",[],"C:\\Users\\User\\Desktop\\HSMX\\client\\src\\Redux\\Reducer.js",[],"C:\\Users\\User\\Desktop\\HSMX\\client\\src\\Redux\\ActionTypes.js",[],"C:\\Users\\User\\Desktop\\HSMX\\client\\src\\pages\\AuthPage.js",[],"C:\\Users\\User\\Desktop\\HSMX\\client\\src\\pages\\HomePage.js",[],"C:\\Users\\User\\Desktop\\HSMX\\client\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\User\\Desktop\\HSMX\\client\\src\\components\\Profile\\UserProfile.js",[],"C:\\Users\\User\\Desktop\\HSMX\\client\\src\\components\\Layout\\MainNavigation.js",[],"C:\\Users\\User\\Desktop\\HSMX\\client\\src\\components\\StartingPage\\StartingPageContent.js",[],"C:\\Users\\User\\Desktop\\HSMX\\client\\src\\components\\Auth\\AuthForm.js",["60","61","62","63"],"import { useState, useRef, useEffect } from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {obtenerTOKEN} from '../../Redux/Actions.js'\r\nimport classes from './AuthForm.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst AuthForm = (props) => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n\r\n  const token = useSelector(state => state.token);\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n  \r\n  \r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n\r\n    \r\n\r\n    if (isLogin) {\r\n      fetch(\r\n        'https://hsmxcontacts.herokuapp.com/api/user/auth/login',\r\n        {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            email: enteredEmail,\r\n            password: enteredPassword,\r\n           \r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      ).then(res=> res.json())\r\n       .then(json => {\r\n\r\n          console.log(json);\r\n          if(json.accessToken) dispatch(obtenerTOKEN(json.accessToken));\r\n        });\r\n    } else {\r\n      fetch(\r\n        'https://hsmxcontacts.herokuapp.com/api/user/auth/registro',\r\n        {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            email: enteredEmail,\r\n            password: enteredPassword,\r\n           \r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      ).then((res) => {\r\n        if (res.ok) {\r\n          setIsLogin(!isLogin);\r\n        } else {\r\n          return res.json().then((data) => {\r\n            // show an error modal\r\n            console.log(data);\r\n          });\r\n        }\r\n      });\r\n    }\r\n   \r\n  };\r\n  \r\n  \r\n  return (\r\n    <section className={classes.auth}>\r\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\r\n      <form onSubmit={submitHandler}>\r\n        <div className={classes.control}>\r\n          <label htmlFor='email'>Your Email</label>\r\n          <input type='email' id='email' ref={emailInputRef} required />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor='password'>Your Password</label>\r\n          <input type='password' id='password'  ref={passwordInputRef} required />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button>{isLogin ? 'Login' : 'Create Account'}</button>\r\n            <button \r\n              type='button'\r\n              className={classes.toggle}\r\n              onClick={switchAuthModeHandler}\r\n            >\r\n              {isLogin ? 'Create new account' : 'Login with existing account'}\r\n            </button> \r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","C:\\Users\\User\\Desktop\\HSMX\\client\\src\\components\\Profile\\ProfileForm.js",["64","65","66"],"import Style from './ProfileForm.module.css'\r\nimport { useState, useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { guardarID } from '../../Redux/Actions';\r\n\r\nconst ProfileForm = () => {\r\n  const dispatch = useDispatch();\r\n  const idSave = useSelector(state => state.id);\r\n\r\n  const [stateContacts, setStateContacts] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\")\r\n\r\n  const [nameEdit, setNameEdit] = useState(\"\");\r\n  const [numberEdit, setNumberEdit] = useState(\"\");\r\n  \r\n  const [usuarios, setUsuarios] = useState(\"\");\r\n\r\n  const token = useSelector(state => state.token);\r\n\r\n  const contacts = () => {\r\n    setStateContacts(stateContacts=>!stateContacts);\r\n  }\r\n  \r\n  const changeName = (e) => {\r\n    setName(e.target.value);\r\n    console.log(name);\r\n  }\r\n  const changeNumber = (e) => {\r\n    setNumber(e.target.value);\r\n  }\r\n  const changeNameEdit = (e) => {\r\n    setNameEdit(e.target.value);\r\n  }\r\n  const changeNumberEdit = (e) => {\r\n    setNumberEdit(e.target.value);\r\n  }\r\n\r\n  const formControler = (e)=>{\r\n    console.log(token);\r\n     fetch(\r\n        'https://hsmxcontacts.herokuapp.com/api/contact/create',\r\n        {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            first_name: name,\r\n            telf_number: number,\r\n           \r\n          }),\r\n          headers: {\r\n            'tokenKey':'bearer '+token,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      ).then(res => res.json())\r\n        .then(() => console.log(token))\r\n       \r\n\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n    setStateContacts(stateContacts=>!stateContacts);\r\n    e.preventDefault();\r\n  }\r\n\r\n  const removeController = (id) => {\r\n    fetch(\r\n      'https://hsmxcontacts.herokuapp.com/api/contact/DELETE',\r\n      {\r\n        method: 'DELETE',\r\n        body: JSON.stringify({\r\n          id: id,\r\n        }),\r\n        headers: {\r\n          'tokenKey':'bearer '+token,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    ).then(res=>res.json())\r\n    .then(res=> console.log(res));    \r\n  }\r\n  const editController = (idSave) => {\r\n    fetch(\r\n      'https://hsmxcontacts.herokuapp.com/api/contact/update',\r\n      {\r\n        method: 'PATCH',\r\n        body: JSON.stringify({\r\n          id: idSave,\r\n          first_name: nameEdit,\r\n          telf_number: numberEdit,\r\n        }),\r\n        headers: {\r\n          'tokenKey':'bearer '+token,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    ).then(res=>res.json())\r\n    .then(res=> console.log(res));  \r\n  }\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://hsmxcontacts.herokuapp.com/api/contact/get\",\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'tokenKey':'bearer '+token,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    ).then (res => res.json())\r\n     .then(res=> setUsuarios(res));\r\n  },[usuarios])\r\n  return (\r\n    <>\r\n    {usuarios.length === 0? <h1>No tienes contactos añadidos</h1> :\r\n      <div className={Style.contenedor}>\r\n        {usuarios.map(e=>{\r\n       \r\n          return(\r\n            \r\n            <div key={e._id} className={Style.contenedorCard}>\r\n\r\n\r\n              <div class=\"card\">\r\n                <div class=\"card-info\">\r\n                  <div class=\"card-avatar\"></div>\r\n                  <div class=\"card-title\">{e.first_name}</div>\r\n\r\n                  <div class=\"card-subtitle\"><h4 className= {Style.phoneNumber}>{e.telf_number}</h4></div>\r\n                </div>\r\n                <ul class=\"card-social\" style={{position:\"relative\",bottom:\"2rem\"}}>\r\n                  <li class=\"card-social__item\">\r\n\r\n\r\n                    <a onClick={()=>{dispatch(guardarID(e._id))}} data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"x>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-edit\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#354259\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                        <path d=\"M9 7h-3a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-3\" />\r\n                        <path d=\"M9 15h3l8.5 -8.5a1.5 1.5 0 0 0 -3 -3l-8.5 8.5v3\" />\r\n                        <line x1=\"16\" y1=\"5\" x2=\"19\" y2=\"8\" />\r\n                      </svg>\r\n                    </a>\r\n                  \r\n\r\n\r\n                  </li>\r\n                  <li class=\"card-social__item\">\r\n\r\n                    <a onClick={()=>removeController(e._id)}>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-trash\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#354259\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                        <line x1=\"4\" y1=\"7\" x2=\"20\" y2=\"7\" />\r\n                        <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />\r\n                        <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />\r\n                        <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\r\n                        <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\r\n                      </svg>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    }\r\n\r\n\r\n    \r\n    <div>\r\n      <button onClick={contacts} class=\"button2\">Add contacts</button>\r\n      {stateContacts && \r\n      <div class=\"login-page\">\r\n      <div class=\"form2\">\r\n        <form class=\"login-form\" onSubmit={e => formControler(e)}>\r\n          <input type=\"text\" onChange={changeName} value={name} placeholder=\"name\"/>\r\n          <input type=\"number\" onChange={changeNumber} value={number} placeholder=\"phone number\"/>\r\n          <button type=\"submit\">Add Conctacts</button>\r\n        </form>\r\n      </div>\r\n      </div>\r\n      }\r\n    </div>\r\n      {/* <!-- Modal --> */}\r\n      <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n              <form class=\"form\">\r\n                <h2 class=\"h2\">Edit Contact</h2>\r\n                <p class=\"p\" type=\"Name:\"><input   onChange={changeNameEdit} value={nameEdit} placeholder=\"Write your name here..\"></input></p>\r\n                <p class=\"p\" type=\"Phone Number:\"><input  onChange={changeNumberEdit} value={numberEdit} placeholder=\"Write your Phone Number here..\"></input></p>\r\n              </form>\r\n              \r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n              <button onClick={()=>editController(idSave)} type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\">Save changes</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </> \r\n  );\r\n}\r\n\r\nexport default ProfileForm;\r\n","C:\\Users\\User\\Desktop\\HSMX\\client\\src\\Redux\\Actions.js",[],{"ruleId":"67","severity":1,"message":"68","line":1,"column":28,"nodeType":"69","messageId":"70","endLine":1,"endColumn":37},{"ruleId":"67","severity":1,"message":"71","line":5,"column":10,"nodeType":"69","messageId":"70","endLine":5,"endColumn":14},{"ruleId":"67","severity":1,"message":"72","line":12,"column":9,"nodeType":"69","messageId":"70","endLine":12,"endColumn":14},{"ruleId":"67","severity":1,"message":"73","line":15,"column":9,"nodeType":"69","messageId":"70","endLine":15,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":112,"column":5,"nodeType":"76","endLine":112,"endColumn":15,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":135,"column":21,"nodeType":"80","endLine":135,"endColumn":122},{"ruleId":"78","severity":1,"message":"79","line":149,"column":21,"nodeType":"80","endLine":149,"endColumn":62},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'token' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["81"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"82","fix":"83"},"Update the dependencies array to be: [token, usuarios]",{"range":"84","text":"85"},[2959,2969],"[token, usuarios]"]